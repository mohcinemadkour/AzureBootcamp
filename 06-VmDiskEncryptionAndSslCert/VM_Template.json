{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VmName": {
      "type": "string"
    },
    "VmSize": {
      "type": "string",      
      "defaultValue": "standard_b1ms"
    },
    "ImagePublisher": {
      "type": "string"
    },
    "ImageOffer": {
      "type": "string"
    },
    "ImageSKU": {
      "type": "string"
    },
    "ImageVersion": {
      "type": "string",      
      "defaultValue": "latest"
    },
    "OSDiskType": {
      "type": "string",      
      "defaultValue": "Standard_LRS",
      "allowedValues": ["Standard_LRS",
                        "Premium_LRS"]
    },
    "OSDiskCache": {
      "type": "string",      
      "defaultValue": "ReadWrite",
      "allowedValues": ["none",
                        "ReadOnly",
                        "ReadWrite"]
    },
    "OSDiskSize": {
      "type": "string"
    },
    "VmDataDisks": {
      "type": "array"
    },
    "VmSubnet": {
      "type": "string"
    },
    "VmIpAddress": {
      "type": "string"
    },
    "VNETResourceGroup": {
      "type": "string"
    },
    "VNETName": {
      "type": "string"
    },
    "VmPublicIpResourceGroup": {
      "type": "string",
      "defaultValue": ""
    },
    "VmPublicIpName": {
      "type": "string",
      "defaultValue": ""
    },    
    "localAdminUsername": {
      "type": "string"
    },
    "localAdminPassword": {
      "type": "securestring"
    },    
    "DiagnosticStorageAccount": {
      "type": "string"
    },     
    "DNSServerConfiguration": {
      "type": "string",
      "defaultValue": "default"
    },
    "DNSServerIp": {
      "type": "array",
      "defaultValue": ["208.67.222.222","4.2.2.1"]
    },
    "VmAvailabilitySetName": {
      "type": "string",
      "defaultValue": "NoAvailabilitySet"
    },
    "PlanInfoRequired": {
      "type": "bool",
      "defaultValue": false
    },
    "System": {
      "type": "string"
    },
    "Component": {
      "type": "string"
    },
    "Environment": {
      "type": "string"    
    },
    "Billing Project": {
      "type": "string"    
    },
    "Maintenance Window": {
      "type": "string"    
    },
    "Compliance": {
      "type": "string"    
    },
    "Managed By": {
      "type": "string"    
    },
    "Role": {
      "type": "string"    
    }
  },
  "variables": {
    "apiVersionVirtualNetworks": "2017-10-01",
    "apiVersionAvailabilitySets": "2017-12-01",
    "apiVersionVirtualMachines": "2018-06-01"   
  },
  "functions": [
    {
      "namespace": "vmfunc",
      "members": {
        "GetAvailabilitySetId": {
          "parameters": [
            {
              "name": "vmAvSetName",
              "type": "string"
            }
          ],
          "output": {
            "type":"object",
            "value": {"id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('vmAvSetName'))]"}
          }
        },
        "GetPlanInfo": {
          "parameters": [
            {
              "name": "PlanPublisher",
              "type": "string"
            },
            {
              "name": "PlanProduct",
              "type": "string"
            },
            {
              "name": "PlanName",
              "type": "string"
            }
          ],
          "output": {
            "type":"object",
            "value": {     
                       "name": "[parameters('PlanName')]",          
                       "publisher": "[parameters('PlanPublisher')]",          
                       "product": "[parameters('PlanProduct')]"
                     }
          }
        },
        "GetResourceId": {
          "parameters": [
            {
              "name": "ResourceGroup",
              "type": "string"
            },
            {
             "name": "Name",
             "type": "string"
            },
            {
             "name": "Type",
             "type": "string"
            }
          ],
          "output": {
            "type":"object",
            "value": {"id": "[resourceId(parameters('ResourceGroup'), parameters('Type'), parameters('Name'))]"}
          }
        }
      }
    }
  ],
  "resources": [
    {
      "name": "[concat(parameters('VmName'),'-NIC-1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersionVirtualNetworks')]",
      "tags": {
        "System": "[parameters('System')]",
        "Component": "[parameters('Component')]",
        "Environment": "[parameters('Environment')]",
        "Billing Project": "[parameters('Billing Project')]",        
        "Compliance": "[parameters('Compliance')]",
        "Managed By": "[parameters('Managed By')]",
        "Role": "[parameters('Role')]"       
      },
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": "[if(not(equals(parameters('VmPublicIpName'), '')), vmfunc.GetResourceId(parameters('VmPublicIpResourceGroup'),parameters('VmPublicIpName'),'Microsoft.Network/publicIPAddresses/'), json('null'))]",
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('VmIpAddress')]",              
              "subnet": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('VNETResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('VNETName'),'/subnets/',parameters('VmSubnet'))]"    
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": "[if(not(equals(parameters('DNSServerConfiguration'), 'default')), parameters('DNSServerIp'), json('null'))]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersionVirtualMachines')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('VmName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "System": "[parameters('System')]",
        "Component": "[parameters('Component')]",
        "Environment": "[parameters('Environment')]",
        "Billing Project": "[parameters('Billing Project')]",
        "Maintenance Window": "[parameters('Maintenance Window')]",
        "Compliance": "[parameters('Compliance')]",
        "Managed By": "[parameters('Managed By')]",
        "Role": "[parameters('Role')]"       
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('VmName'),'-NIC-1'))]"
      ],
      "properties": {
        "availabilitySet": "[if(not(equals(parameters('VmAvailabilitySetName'), 'NoAvailabilitySet')), vmfunc.GetResourceId(resourceGroup().name,parameters('VmAvailabilitySetName'),'Microsoft.Compute/availabilitySets'), json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('VmSize')]"
        },        
        "osProfile": {
          "computerName": "[parameters('VmName')]",
          "adminUsername": "[parameters('localAdminUsername')]",
          "adminPassword": "[parameters('localAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('ImagePublisher')]",
            "offer": "[parameters('ImageOffer')]",
            "sku": "[parameters('ImageSKU')]",
            "version": "[parameters('ImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(parameters('VmName'), '-osdisk')]",
            "managedDisk": {
              "storageAccountType": "[parameters('OSDiskType')]"
            },
            "caching": "[parameters('OSDiskCache')]",
            "diskSizeGB": "[parameters('OSDiskSize')]",
            "createOption": "FromImage"
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[length(parameters('VmDataDisks'))]",
              "input": {
                "caching": "[parameters('VmDataDisks')[copyIndex('dataDisks')].caching]",
                "diskSizeGB": "[parameters('VmDataDisks')[copyIndex('dataDisks')].sizeGb]",
                "lun": "[copyindex('dataDisks')]",
                "name": "[parameters('VmDataDisks')[copyIndex('dataDisks')].name]",
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "[parameters('VmDataDisks')[copyIndex('dataDisks')].type]"
                }
              }
            }
          ]           
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('VmName'),'-NIC-1'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "True",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('DiagnosticStorageAccount')), '2015-06-15').primaryEndpoints.blob)]"
          }
        }
     },
     "plan": "[if(equals(parameters('PlanInfoRequired'), bool('true')), vmfunc.GetPlanInfo(parameters('ImagePublisher'), parameters('ImageOffer'), parameters('ImageSKU')), json('null'))]",
     "resources": []
    }    
  ]
}